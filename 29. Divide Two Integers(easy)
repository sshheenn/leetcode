/*
给定两个整数，被除数 dividend 和除数 divisor。将两数相除，要求不使用乘法、除法和 mod 运算符。

返回被除数 dividend 除以除数 divisor 得到的商。

示例 1:

输入: dividend = 10, divisor = 3
输出: 3
示例 2:

输入: dividend = 7, divisor = -3
输出: -2
说明:

被除数和除数均为 32 位有符号整数。
除数不为 0。
假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−231,  231 − 1]。本题中，如果除法结果溢出，则返回 231 − 1。
*/


class Solution {
    public int divide(int dividend, int divisor) {
        
        if(dividend == 0)return 0;
        if(dividend == Integer.MIN_VALUE){  //被除数为最小值，除数为1和-1的情况 
            if(divisor == 1)return dividend;
            else if(divisor == -1)return Integer.MAX_VALUE;
        }
           
        if(dividend == divisor) return 1;
        
        if(divisor == Integer.MIN_VALUE) return 0;
        
        int flag = dividend^divisor;
        
        if(flag < 0)flag = -1;
        else flag = 1;
        
        int d1 = 0;
        if(dividend == Integer.MIN_VALUE){
            d1 = Integer.MAX_VALUE;
        }else {
            d1 = Math.abs(dividend);
        }
           
        int d2 = Math.abs(divisor);
        
        int i = 31;
        int res = 0;

        while(d1 >= d2){
           if(d1 >> i >= d2){
               res += 1<<i;
               d1 -= d2*(1 << i);
           }
            
            i --;
        }
        
        if(dividend == Integer.MIN_VALUE){
            res += (d1 + 1) / d2;
        }
          
        return res * flag;
    }
}
