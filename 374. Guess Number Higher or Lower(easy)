/*
我们正在玩一个猜数字游戏。 游戏规则如下：
我从 1 到 n 选择一个数字。 你需要猜我选择了哪个数字。
每次你猜错了，我会告诉你这个数字是大了还是小了。
你调用一个预先定义好的接口 guess(int num)，它会返回 3 个可能的结果（-1，1 或 0）：

-1 : 我的数字比较小
 1 : 我的数字比较大
 0 : 恭喜！你猜对了！
示例 :

输入: n = 10, pick = 6
输出: 6
*/

/*
思路：一般的二分法查找，先找中间的，大了就往前找，小了就往后找，需要注意的是，不能用左边的坐标加上右边的坐标除以2来当作中间的坐标，
因为当左边的坐标和右边的坐标都比较大时，虽然它们各自都还没超过整数的范围，但它们相加就可能会超出整数的范围
*/

/* The guess API is defined in the parent class GuessGame.
   @param num, your guess
   @return -1 if my number is lower, 1 if my number is higher, otherwise return 0
      int guess(int num); */

public class Solution extends GuessGame {
    public int guessNumber(int n) {
        int l = 1;
        int r = n;
        
        while(l < r){
            int m = l + (r - l) / 2;
           
            if(guess(m) == 0){
                r = m;
                break;
            }
            
            else if(guess(m) == -1){
                r = m;
            }
            
            else if(guess(m) == 1){
                l = m + 1;
            }
        }
        
        return r;
    }
}
