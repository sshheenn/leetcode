/*
给出一个整数数组 A 和一个查询数组 queries。

对于第 i 次查询，有 val = queries[i][0], index = queries[i][1]，我们会把 val 加到 A[index] 上。然后，第 i 次查询的答案是 A 中偶数值的和。

（此处给定的 index = queries[i][1] 是从 0 开始的索引，每次查询都会永久修改数组 A。）

返回所有查询的答案。你的答案应当以数组 answer 给出，answer[i] 为第 i 次查询的答案。
*/


思路：先求出原来的数组A的偶数和sum,然后遍历queries,先判断要改变的A中的数是否为偶数，如是，则用sum减去A中的该数，
然后用A中的该数加上改变值，再判断改变后的值是否为偶数，如是，则用sum加上该数，改变后的sum则为这一轮的结果

class Solution {
    public int[] sumEvenAfterQueries(int[] A, int[][] queries) {
        int len = queries.length;
        int[] answer = new int[len];
        int sum = 0;
        for(int temp : A){
            if(temp % 2 == 0){
                sum += temp;
            }
        }
        
        for(int i = 0; i < len; i ++){
            int val = queries[i][0];
            int index = queries[i][1];
            if(A[index] % 2 == 0){
                sum -= A[index];
            }
            
            A[index] += val;
            if(A[index] % 2 == 0){
                sum += A[index];
            }
            answer[i] = sum;
        }
        return answer;
    }
}
